using namespace metal;
struct xlatMtlShaderInput {
  float4 a_color0 [[attribute(0)]];
  float2 a_position [[attribute(1)]];
  float2 a_texcoord0 [[attribute(2)]];
};
struct xlatMtlShaderOutput {
  float4 gl_Position [[position]];
  float4 v_color0;
  float2 v_texcoord0;
};
struct xlatMtlShaderUniform {
  float4x4 u_modelViewProj;
};
vertex xlatMtlShaderOutput xlatMtlMain (xlatMtlShaderInput _mtl_i [[stage_in]], constant xlatMtlShaderUniform& _mtl_u [[buffer(0)]])
{
  xlatMtlShaderOutput _mtl_o;
  float4 tmpvar_1 = 0;
  tmpvar_1.zw = float2(0.0, 1.0);
  tmpvar_1.xy = _mtl_i.a_position;
  _mtl_o.gl_Position = (_mtl_u.u_modelViewProj * tmpvar_1);
  _mtl_o.v_color0 = _mtl_i.a_color0;
  _mtl_o.v_texcoord0 = _mtl_i.a_texcoord0;
  return _mtl_o;
}

